import Web3 from 'web3';
import { createWeb3Modal } from '@web3modal/wagmi';
import { publicProvider } from 'wagmi/providers/public';
import { configureChains, defaultChains } from 'wagmi';

// Setup chains and providers
const chains = [/* Your chain objects here, such as Arbitrum, Mainnet as configured in your environment */];
const projectId = 'YOUR_PROJECT_ID'; // Your project ID here

// Use publicProvider as an example; you can configure more as needed
const { provider } = configureChains(chains, [publicProvider()]);

// Metadata and other configurations as per v4 setup
const metadata = {
    name: 'Web3Modal Example',
    description: 'An example of Web3Modal with Wagmi',
    url: 'https://yourdomain.com',
    icons: ['https://example.com/favicon.ico']
};

// Creating a client configuration
const clientConfig = {
    autoConnect: true,
    provider,
    // Additional configurations can be added here
};

// Creating a Web3Modal instance
const web3Modal = createWeb3Modal({
    projectId,
    metadata,
    clientConfig,
    chains
});

async function connectWallet() {
    try {
        const modalResult = await web3Modal.connect();
        const web3 = new Web3(modalResult.provider);
        console.log("Connected to", modalResult.chain.id);
        return web3;
    } catch (error) {
        console.error("Connection failed:", error);
        return null;
    }
}

async function disconnectWallet() {
    try {
        await web3Modal.disconnect();
        console.log("Disconnected");
    } catch (error) {
        console.error("Disconnect failed:", error);
    }
}

// Example usage
document.addEventListener('DOMContentLoaded', () => {
    const connectBtn = document.getElementById('connectButton');
    connectBtn.onclick = async () => {
        const web3Instance = await connectWallet();
        if (web3Instance) {
            console.log('Web3 instance created:', web3Instance);
            // Additional logic can be added here
        }
    };
});
